let restaurant;var newMap;document.addEventListener('DOMContentLoaded',()=>{initMap()}),initMap=()=>{fetchRestaurantFromURL().then(a=>{self.newMap=L.map('map',{center:[a.latlng.lat,a.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}',{mapboxToken:'pk.eyJ1IjoibWE3bW91ZDIwMTgiLCJhIjoiY2prZmZvNjczMDZseDNwbzY3ajU3dG94OCJ9.L9ZgU0pFAHMjWkRwp9Meog',maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery \xA9 <a href="https://www.mapbox.com/">Mapbox</a>',id:'mapbox.streets'}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap)}).catch(a=>console.error(a))},fetchRestaurantFromURL=()=>{if(self.restaurant)return Promise.resolve(self.restaurant);const a=parseInt(getParameterByName('id'));return a&&a!==NaN?DBHelper.fetchRestaurantById(a).then(b=>{return b?(self.restaurant=b,fillRestaurantHTML(),b):Promise.reject(`Restaurant with ID ${a} was not found`)}):Promise.reject('No restaurant id in URL')},fillRestaurantHTML=(a=self.restaurant)=>{const b=document.getElementById('restaurant-name');b.innerHTML=a.name;const c=document.getElementById('restaurant-address');c.innerHTML=a.address;const d=document.getElementById('restaurant-img');d.className='restaurant-img',d.alt=a.name+' logo ',d.src=DBHelper.imageUrlForRestaurant(a);const e=document.getElementById('restaurant-cuisine');e.innerHTML=a.cuisine_type,a.operating_hours&&fillRestaurantHoursHTML(),DBHelper.fetchReviewsByRestId(a.id).then(f=>fillReviewsHTML(f))},fillRestaurantHoursHTML=(a=self.restaurant.operating_hours)=>{const b=document.getElementById('restaurant-hours');for(let c in a){const d=document.createElement('tr'),e=document.createElement('td');e.innerHTML=c,d.appendChild(e);const f=document.createElement('td');f.innerHTML=a[c],d.appendChild(f),b.appendChild(d)}},fillReviewsHTML=(a=self.reviews)=>{const b=document.getElementById('reviews-container'),c=document.createElement('h2');if(c.innerHTML='Reviews',b.appendChild(c),!a){const e=document.createElement('p');return e.innerHTML='No reviews yet!',b.appendChild(e),void(e.id='no-review')}const d=document.getElementById('reviews-list');a.forEach(e=>{d.appendChild(createReviewHTML(e))}),b.appendChild(d)},createReviewHTML=a=>{const b=document.createElement('li');if(!navigator.onLine){const g=document.createElement('p');g.classList.add('offline_label'),g.innerHTML='You\'re Offline, Don\'t Worry, Keep Going We\'ll update when Online',b.classList.add('reviews_offline'),b.appendChild(g)}const c=document.createElement('p');c.innerHTML=a.name,b.appendChild(c);const d=document.createElement('p');d.innerHTML=`Date: ${new Date(a.createdAt).toLocaleString()}`,b.appendChild(d);const e=document.createElement('p');e.innerHTML=`Rating: ${a.rating}`,b.appendChild(e);const f=document.createElement('p');return f.innerHTML=a.comments,b.appendChild(f),b},addReview=()=>{event.preventDefault();let a=getParameterByName('id'),b=document.getElementById('name1').value,c=document.getElementById('textInput0').value,d=document.getElementById('addHere').value;const e=[b,c,d,a],f={restaurant_id:parseInt(e[3]),rating:parseInt(e[1]),name:e[0],comments:e[2],createdAt:new Date};DBHelper.addReview(f),addReviewHTML(f),document.getElementById('addReview').reset()},addReviewHTML=a=>{document.getElementById('no-review')&&document.getElementById('no-review').remove();const b=document.getElementById('reviews-container'),c=document.getElementById('reviews-list');c.insertBefore(createReviewHTML(a),c.firstChild),b.appendChild(c)},fillBreadcrumb=(a=self.restaurant)=>{const b=document.getElementById('breadcrumb'),c=document.createElement('li');c.innerHTML=a.name,b.appendChild(c)},getParameterByName=(a,b)=>{b||(b=window.location.href),a=a.replace(/[\[\]]/g,'\\$&');const c=new RegExp(`[?&]${a}(=([^&#]*)|&|#|$)`),d=c.exec(b);return d?d[2]?decodeURIComponent(d[2].replace(/\+/g,' ')):'':null};
